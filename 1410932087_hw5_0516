# **數位邏輯設計實驗Homework(5)**



資工二2：黃宇丞    指導老師：林宏益 

---

## 一.作業目標
製作出Pseudo Random Pattern Generator。

---

## 二.步驟

每個Q3是前一個Q2的輸出，每個Q2也是前一個Q1的輸出，每個Q1是前一個Q3輸出回傳在跟Q1做XOR。

---

## 三.程式碼

>RTL Code
```=
module PRPG(clk,Load);


input clk;
input Load;
output [2:0] Din;
output [2:0] Q_out;
output Q1, Q2, Q3;


reg [2:0] Din;
reg [2:0] Q_out;
reg Q1, Q2, Q3;
reg temp;


initial
begin
    temp = 0;
    Q1 = 1;
    Q2 = 0;
    Q3 = 0;
    Q_out = 3'b001;
    Din = 3'b111;
end


always@ (posedge clk or posedge Load)
begin
    if(Load)
    begin
        Q1 = Din[0];
        Q2 = Din[1];
        Q3 = Din[2];
    end


    else
    begin
        temp = Q1;
        Q1 = Q1 ^ Q3;
        Q3 = Q2;
        Q2 = temp;
    end


    Q_out[0] = Q1;
    Q_out[1] = Q2;
    Q_out[2] = Q3;
    
end
endmodule
```


>TestBench
```=
`timescale 1ns/1ps
module PRPG_tb;
reg clk_tb;
reg Load_tb;
reg Din_tb;


initial
begin
    clk_tb = 0;
    Din_tb = 4;
    Load_tb = 1'b0;
end


always
begin
    #10 clk_tb = ~clk_tb;
end


initial
begin
    #30 Load_tb = 1'b0;
    #80 Load_tb = 1'b1;
    #5 Load_tb = 1'b0;
    #250 $finish;
end


initial
begin
    $dumpfile("PRPG.vcd");
    $dumpvars(0, PRPG_tb);
end


PRPG PRPG_tb
(
    .clk(clk_tb),
    .Load(Load_tb)
);
endmodule

```


>Makefile
```=
	VERILOG = iverilog
	TARGET = PRPG.vcd
	TEMP = temp.vvp
	

	$(TARGET) : $(TEMP)
		vvp $(TEMP)
	

	$(TEMP): PRPG_tb.v PRPG.v
		$(VERILOG) -o $(TEMP) PRPG_tb.v PRPG.v
	

	clean:
		-del $(TARGET)
		-del $(TEMP)

```

---


## 四.波形圖
![](https://i.imgur.com/8mU5sMn.png)

---
## 五.心得

 Github越來越常使用，也慢慢習慣熟悉了。這次功課已經沒有給程式碼了，所以全部靠自己來，花了許多時間在code上面，下次必須在更了解程式碼了，這樣才能寫得比腳順手，不會在彆手彆腳。
    

---

## 六.參考資料 
智慧大師
    
---
